name: Infrastructure deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Select target environment. Environment names in the list are configured GitHub environments.
        type: choice
        options:
          - Development
          - Test
          - Production
        required: true
        default: Development

env:
  resourceGroupLocation: westus

permissions:
  id-token: write
  contents: read

jobs:
  azure-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Resource Group
        id: set-env
        run: |
          if [ "${{ github.event.inputs.environment }}" == "Development" ]; then
            echo "RESOURCE_GROUP_NAME=Template-uw-rg-d" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "Test" ]; then
            echo "RESOURCE_GROUP_NAME=Template-uw-rg-t" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.environment }}" == "Production" ]; then
            echo "RESOURCE_GROUP_NAME=Template-uw-rg-p" >> $GITHUB_ENV
          fi

      - name: Print Resource Group Name
        run: echo "The target environment is ${{ env.RESOURCE_GROUP_NAME }}"

      - name: Validate Bicep template
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./CICD/Azure/resource-group-scope.bicep
          deploymentMode: Validate
          parameters: environment=${{ inputs.environment }} mySQLadministratorPassword=${{ secrets.MYSQL_ADMINISTRATOR_PASSWORD }} mySQLadministratorLogin=${{ secrets.MYSQL_ADMINISTRATOR_LOGIN }}

      - name: Deploy resource group resources
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./CICD/Azure/resource-group-scope.bicep
          deploymentMode: Incremental
          parameters: environment=${{ inputs.environment }} mySQLadministratorPassword=${{ secrets.MYSQL_ADMINISTRATOR_PASSWORD }} mySQLadministratorLogin=${{ secrets.MYSQL_ADMINISTRATOR_LOGIN }}
